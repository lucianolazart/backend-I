<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Inicio</a></li>
                    <li class="breadcrumb-item active">{{product.title}}</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            {{#if product.thumbnail}}
            <img src="{{product.thumbnail}}" class="d-block w-100" alt="{{product.title}}" style="height: 400px; object-fit: cover;">
            {{else}}
            <div class="bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                <span class="text-muted">Sin imagen disponible</span>
            </div>
            {{/if}}
        </div>

        <div class="col-md-6">
            <div class="card border-0">
                <div class="card-body">
                    <h1 class="card-title">{{product.title}}</h1>
                    <p class="card-text text-muted">{{product.description}}</p>
                    
                    <div class="row mb-3">
                        <div class="col-6">
                            <h3 class="text-primary">${{product.price}}</h3>
                        </div>
                        <div class="col-6 text-end">
                            <span class="badge bg-{{#if product.status}}success{{else}}danger{{/if}} fs-6">
                                {{#if product.status}}Disponible{{else}}No disponible{{/if}}
                            </span>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-6">
                            <strong>Categoría:</strong>
                            <span class="badge bg-secondary">{{product.category}}</span>
                        </div>
                        <div class="col-6">
                            <strong>Stock:</strong>
                            <span class="badge bg-info">{{product.stock}} unidades</span>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-6">
                            <strong>Código:</strong>
                            <small class="text-muted">{{product.code}}</small>
                        </div>
                    </div>

                    {{#if product.status}}
                    <div class="d-grid gap-2">
                        <button class="btn btn-success btn-lg" onclick="addToCart('{{product._id}}')">
                            <i class="bi bi-cart-plus me-2"></i>Agregar al Carrito
                        </button>
                    </div>
                    {{else}}
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        Este producto no está disponible actualmente.
                    </div>
                    {{/if}}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function addToCart(productId) {
    fetch('/api/carts/open', {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Error al verificar carritos abiertos');
        }
        return response.json();
    })
    .then(data => {
        let cartId;
        
        if (data.status === 'success' && data.payload && data.payload.length > 0) {
            cartId = data.payload[0]._id;
            return fetch(`/api/carts/${cartId}/product/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ quantity: 1 })
            });
        } else {
            return fetch('/api/carts', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Error en la operación del carrito');
        }
        return response.json();
    })
    .then(data => {
        if (data.status === 'success') {
            if (data.payload.products && data.payload.products.length === 0) {
                const cartId = data.payload._id;
                return fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity: 1 })
                });
            } else {
                alert('Producto agregado al carrito exitosamente!');
                return null;
            }
        } else {
            throw new Error('Error al procesar el carrito');
        }
    })
    .then(response => {
        if (response) {
            if (!response.ok) {
                throw new Error('Error al agregar producto al carrito');
            }
            return response.json();
        }
        return null;
    })
    .then(data => {
        if (data && data.status === 'success') {
            alert('Producto agregado al carrito exitosamente!');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error al agregar producto al carrito: ' + error.message);
    });
}
</script> 